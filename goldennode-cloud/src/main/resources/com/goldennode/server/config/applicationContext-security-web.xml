<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:http="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<security:http use-expressions="true">
	<!-- <security:csrf disabled="true" /> -->
		<security:intercept-url pattern="/login*"
			access="isAnonymous()" />
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />
		<security:form-login login-page='/login'
			default-target-url="/index" authentication-failure-url="/login?error=bad_credentials" />
		<security:logout logout-success-url="/login" />
	</security:http>
	<!-- Configures the authentication manager bean which processes authentication 
		requests. -->
	<security:authentication-manager alias="authenticationManager">
		<!-- <security:authentication-provider
			ref="hmacAuthenticationProvider" /> -->
		<security:authentication-provider
			user-service-ref="accountUserDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- This is used to hash the password of the user. -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg index="0" value="10" />
	</bean>
	<!--This bean encrypts the authorization details of the connection. In our 
		example, the authorization details are stored as plain text. DO NOT USE THIS 
		IN PRODUCTION. <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
		factory-method="noOpText" /> -->
</beans>