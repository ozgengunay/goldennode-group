<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<sec:http 
		entry-point-ref="forbiddenEntryPoint" 
		create-session="never">
		<sec:anonymous enabled="false" />
		<sec:session-management
			session-fixation-protection="none" />
		<sec:custom-filter ref="hmacAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<sec:csrf disabled="true"/>
	</sec:http>
	
	<bean id="hmacAuthenticationFilter"
		class="com.goldennode.server.security.hmac.HMACAuthenticationFilter">
		<constructor-arg name="defaultFilterProcessesUrl"
			value="/" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler">
			<!-- Upon successful authentication, Spring will attempt to try and move 
				you to another URL -->
			<!-- We have to prevent this because the request for the resource and 
				the authentication all get done in the same request! -->
			<bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
				<property name="redirectStrategy">
					<bean class="com.goldennode.server.security.hmac.NoRedirectStrategy" />
				</property>
			</bean>
		</property>
	</bean>


	<bean id="hmacAuthenticationProvider"
		class="com.goldennode.server.security.hmac.HMACAuthenticationProvider">

	</bean>

	<bean id="forbiddenEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />


</beans>
