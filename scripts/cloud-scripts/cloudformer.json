{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "zonethingabledcom": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "thingabled.com."
      }
    },
    "dnsthingabledcom": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneId": {
          "Ref": "zonethingabledcom"
        },
        "RecordSets": [
          {
            "Name": "thingabled.com.",
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": {
                "Fn::GetAtt": [
                  "elbMYSSLLB",
                  "CanonicalHostedZoneNameID"
                ]
              },
              "DNSName": "dualstack.myssllb-218244944.eu-west-2.elb.amazonaws.com"
            }
          }
        ]
      }
    },
    "vpcc0a41fa9": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "subneteff35d94": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "eu-west-2a",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "subnetc33ff88e": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.11.0/24",
        "AvailabilityZone": "eu-west-2b",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "subnet51ce602a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.10.0/24",
        "AvailabilityZone": "eu-west-2a",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "subnet773ff83a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "eu-west-2b",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "igw1152f578": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "dopt41d21b28": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "aclba26a7d3": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "acl2628a94f": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        }
      }
    },
    "aclfa2aab93": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "rtb353dbf5c": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        }
      }
    },
    "rtb853fbdec": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "rtbec3fbd85": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "elbMYSSLLB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "PolicyForELB",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2016-08"
              }
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "subnet773ff83a"
          },
          {
            "Ref": "subneteff35d94"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "5",
          "Target": "HTTP:8080/server/login",
          "Timeout": "4",
          "UnhealthyThreshold": "3"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgsecurityGroupPublic"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "443",
            "Protocol": "HTTPS",
            "InstanceProtocol": "HTTP",
            "SSLCertificateId": "arn:aws:acm:eu-west-2:844609151715:certificate/88f306aa-a752-4014-bff7-171ea224232b",
            "PolicyNames": [
              "PolicyForELB"
            ]
          }
        ]
      }
    },
    "eip3517725172": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "asgThingabledStackstackThingabledAsgF54C2O5JKVP5autoScalingGroupKH3L80BOGSMK": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "eu-west-2a",
          "eu-west-2b"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "100",
        "HealthCheckType": "ELB",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnetc33ff88e"
          },
          {
            "Ref": "subnet51ce602a"
          }
        ],
        "NotificationConfigurations": [
          {
            "TopicARN": "arn:aws:sns:eu-west-2:844609151715:ThingabledStack-stackThingabledAsg-F54C2O5JKVP5-topicAutoScaling-13Y0BH9DNHIQO",
            "NotificationTypes": [
              "autoscaling:EC2_INSTANCE_LAUNCH",
              "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
              "autoscaling:EC2_INSTANCE_TERMINATE",
              "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
            ]
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcThingabledStackstackThingabledAsgF54C2O5JKVP5launchConfiguration1FLWSUQIF3SDK"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elbMYSSLLB"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcThingabledStackstackThingabledAsgF54C2O5JKVP5launchConfiguration1FLWSUQIF3SDK": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-b6daced2",
        "InstanceType": "t2.micro",
        "KeyName": "aws",
        "IamInstanceProfile": "ThingabledStack-stackThingabledAsg-F54C2O5JKVP5-instanceProfile-1A74G6BOW73J4",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgsecurityGroupPrivate"
          }
        ]
      }
    },
    "instancei038e7e2e0ab7d1180": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-b6daced2",
        "InstanceType": "t2.micro",
        "KeyName": "aws",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subneteff35d94"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.232",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgsecurityGroupBastion"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rdstd12wls03ptgnyb": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "5",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.micro",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "thingabled",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "06:58-07:28",
        "PreferredMaintenanceWindow": "mon:12:30-mon:13:00",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.17",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetthingabledstackstackthingabledrds1t6sd7ya5voakdbsubnetgroup1rtyr1gh97zfx"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgsecurityGroupRDS"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "dbsubnetthingabledstackstackthingabledrds1t6sd7ya5voakdbsubnetgroup1rtyr1gh97zfx": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "dbSubnetGroup",
        "SubnetIds": [
          {
            "Ref": "subnetc33ff88e"
          },
          {
            "Ref": "subnet51ce602a"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "topicAutoScaling": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Auto-Scaling",
        "Subscription": [
          {
            "Endpoint": "ogunay1978@gmail.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "sgsecurityGroupBastion": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Bastion SG",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "sgsecurityGroupPrivate": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Private SG",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "sgsecurityGroupPublic": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public SG",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "sgsecurityGroupRDS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "securityGroupRDS",
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ThingabledStack"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "snspolicyAutoScaling": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicAutoScaling"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicAutoScaling"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "844609151715"
                }
              }
            }
          ]
        }
      }
    },
    "scalingThingabledStackstackThingabledAsgF54C2O5JKVP5scalingDecreaseGroupSize1ICOTRQ5GKT6V": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": 0,
            "MetricIntervalUpperBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgThingabledStackstackThingabledAsgF54C2O5JKVP5autoScalingGroupKH3L80BOGSMK"
        }
      }
    },
    "scalingThingabledStackstackThingabledAsgF54C2O5JKVP5scalingIncreaseGroupSize1PVHJ5NUKD35C": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": 0,
            "MetricIntervalLowerBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgThingabledStackstackThingabledAsgF54C2O5JKVP5autoScalingGroupKH3L80BOGSMK"
        }
      }
    },
    "alarmThingabledStackstackThingabledAsgF54C2O5JKVP5scaleDownAlarm18W9LN8SHRCLZ": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "900",
        "Statistic": "Average",
        "Threshold": "10.0",
        "AlarmActions": [
          "arn:aws:sns:eu-west-2:844609151715:ThingabledStack-stackThingabledAsg-F54C2O5JKVP5-topicAutoScaling-13Y0BH9DNHIQO",
          {
            "Ref": "scalingThingabledStackstackThingabledAsgF54C2O5JKVP5scalingDecreaseGroupSize1ICOTRQ5GKT6V"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "Auto Scaling Group"
          }
        ]
      }
    },
    "alarmThingabledStackstackThingabledAsgF54C2O5JKVP5scaleUpAlarm1JK1ZLBU66A08": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "30.0",
        "AlarmActions": [
          {
            "Ref": "scalingThingabledStackstackThingabledAsgF54C2O5JKVP5scalingIncreaseGroupSize1PVHJ5NUKD35C"
          },
          "arn:aws:sns:eu-west-2:844609151715:ThingabledStack-stackThingabledAsg-F54C2O5JKVP5-topicAutoScaling-13Y0BH9DNHIQO"
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "Auto Scaling Group"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "PortRange": {
          "From": "80",
          "To": "80"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "200",
        "PortRange": {
          "From": "443",
          "To": "443"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "300",
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "400",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl5": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "PortRange": {
          "From": "80",
          "To": "80"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl6": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "200",
        "PortRange": {
          "From": "443",
          "To": "443"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl7": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "300",
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl8": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": "400",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        }
      }
    },
    "acl9": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl2628a94f"
        }
      }
    },
    "acl10": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl2628a94f"
        }
      }
    },
    "acl11": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfa2aab93"
        }
      }
    },
    "acl12": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfa2aab93"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        },
        "SubnetId": {
          "Ref": "subnet773ff83a"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclba26a7d3"
        },
        "SubnetId": {
          "Ref": "subneteff35d94"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfa2aab93"
        },
        "SubnetId": {
          "Ref": "subnetc33ff88e"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfa2aab93"
        },
        "SubnetId": {
          "Ref": "subnet51ce602a"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "InternetGatewayId": {
          "Ref": "igw1152f578"
        }
      }
    },
    "subnetroute2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb853fbdec"
        },
        "SubnetId": {
          "Ref": "subnet773ff83a"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb853fbdec"
        },
        "SubnetId": {
          "Ref": "subneteff35d94"
        }
      }
    },
    "subnetroute4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbec3fbd85"
        },
        "SubnetId": {
          "Ref": "subnet51ce602a"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbec3fbd85"
        },
        "SubnetId": {
          "Ref": "subnetc33ff88e"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb853fbdec"
        },
        "GatewayId": {
          "Ref": "igw1152f578"
        }
      },
      "DependsOn": "gw1"
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbec3fbd85"
        }
      }
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpcc0a41fa9"
        },
        "DhcpOptionsId": {
          "Ref": "dopt41d21b28"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupBastion"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "SourceSecurityGroupId": {
          "Ref": "sgsecurityGroupPublic"
        },
        "SourceSecurityGroupOwnerId": "844609151715"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgsecurityGroupBastion"
        },
        "SourceSecurityGroupOwnerId": "844609151715"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "SourceSecurityGroupId": {
          "Ref": "sgsecurityGroupPublic"
        },
        "SourceSecurityGroupOwnerId": "844609151715"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPublic"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPublic"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupRDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgsecurityGroupPrivate"
        },
        "SourceSecurityGroupOwnerId": "844609151715"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupBastion"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupPublic"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecurityGroupRDS"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": ""
}